plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    id 'com.google.protobuf' version '0.9.4'
}

android {
    namespace 'cl.example.turisnuble'
    compileSdk 36

    defaultConfig {
        applicationId "cl.example.turisnuble"
        minSdk 26
        targetSdk 36
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.activity
    implementation libs.androidx.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    implementation 'org.maplibre.gl:android-sdk:11.13.5'
    implementation 'androidx.activity:activity-ktx:1.9.0'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-protobuf:2.9.0'
    implementation 'org.mobilitydata:gtfs-realtime-bindings:0.0.8'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'

    implementation 'androidx.viewpager2:viewpager2:1.1.0'

    implementation 'com.github.bumptech.glide:glide:4.16.0'

    implementation 'com.google.android.gms:play-services-location:21.0.1'

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.3"
    implementation "androidx.fragment:fragment-ktx:1.8.1"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.21.12"
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}